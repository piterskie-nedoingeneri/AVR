
zond.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  000008c4  00000958  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080014c  0080014c  000009a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001036  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000882  00000000  00000000  00001b32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000087c  00000000  00000000  000023b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a0  00000000  00000000  00002c30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f2  00000000  00000000  00002ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000749  00000000  00000000  000033c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003b0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ec       	ldi	r30, 0xC4	; 196
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 34       	cpi	r26, 0x4C	; 76
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e4       	ldi	r26, 0x4C	; 76
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 36       	cpi	r26, 0x62	; 98
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 79 02 	call	0x4f2	; 0x4f2 <main>
  9e:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uartInit>:
		kolvo=0;
		for(int i=1;i<ind;i++)
		{
			kolvo=kolvo*10 + (uint8_t)(word[i]-'0');
		}
		getsample();
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  ac:	e1 ec       	ldi	r30, 0xC1	; 193
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	88 69       	ori	r24, 0x98	; 152
  b4:	80 83       	st	Z, r24
  b6:	e0 ec       	ldi	r30, 0xC0	; 192
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	82 60       	ori	r24, 0x02	; 2
  be:	80 83       	st	Z, r24
  c0:	e2 ec       	ldi	r30, 0xC2	; 194
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	86 60       	ori	r24, 0x06	; 6
  c8:	80 83       	st	Z, r24
  ca:	08 95       	ret

000000cc <send_byte>:
  cc:	e0 ec       	ldi	r30, 0xC0	; 192
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	90 81       	ld	r25, Z
  d2:	95 ff       	sbrs	r25, 5
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <send_byte+0x4>
  d6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  da:	08 95       	ret

000000dc <print>:
  dc:	0f 93       	push	r16
  de:	1f 93       	push	r17
  e0:	cf 93       	push	r28
  e2:	fc 01       	movw	r30, r24
  e4:	80 81       	ld	r24, Z
  e6:	88 23       	and	r24, r24
  e8:	59 f0       	breq	.+22     	; 0x100 <print+0x24>
  ea:	8f 01       	movw	r16, r30
  ec:	c0 e0       	ldi	r28, 0x00	; 0
  ee:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
  f2:	cf 5f       	subi	r28, 0xFF	; 255
  f4:	f8 01       	movw	r30, r16
  f6:	ec 0f       	add	r30, r28
  f8:	f1 1d       	adc	r31, r1
  fa:	80 81       	ld	r24, Z
  fc:	81 11       	cpse	r24, r1
  fe:	f7 cf       	rjmp	.-18     	; 0xee <print+0x12>
 100:	cf 91       	pop	r28
 102:	1f 91       	pop	r17
 104:	0f 91       	pop	r16
 106:	08 95       	ret

00000108 <writeint>:
 108:	4f 92       	push	r4
 10a:	5f 92       	push	r5
 10c:	6f 92       	push	r6
 10e:	7f 92       	push	r7
 110:	8f 92       	push	r8
 112:	9f 92       	push	r9
 114:	af 92       	push	r10
 116:	bf 92       	push	r11
 118:	cf 92       	push	r12
 11a:	df 92       	push	r13
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	0f 93       	push	r16
 122:	1f 93       	push	r17
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	6b 01       	movw	r12, r22
 12a:	7c 01       	movw	r14, r24
 12c:	99 23       	and	r25, r25
 12e:	24 f4       	brge	.+8      	; 0x138 <writeint+0x30>
 130:	8d e2       	ldi	r24, 0x2D	; 45
 132:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 136:	0f c0       	rjmp	.+30     	; 0x156 <writeint+0x4e>
 138:	67 2b       	or	r22, r23
 13a:	68 2b       	or	r22, r24
 13c:	69 2b       	or	r22, r25
 13e:	59 f4       	brne	.+22     	; 0x156 <writeint+0x4e>
 140:	80 e3       	ldi	r24, 0x30	; 48
 142:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 146:	81 2c       	mov	r8, r1
 148:	91 2c       	mov	r9, r1
 14a:	54 01       	movw	r10, r8
 14c:	83 94       	inc	r8
 14e:	c1 2c       	mov	r12, r1
 150:	d1 2c       	mov	r13, r1
 152:	76 01       	movw	r14, r12
 154:	3f c0       	rjmp	.+126    	; 0x1d4 <writeint+0xcc>
 156:	d7 01       	movw	r26, r14
 158:	c6 01       	movw	r24, r12
 15a:	ff 20       	and	r15, r15
 15c:	3c f4       	brge	.+14     	; 0x16c <writeint+0x64>
 15e:	88 27       	eor	r24, r24
 160:	99 27       	eor	r25, r25
 162:	dc 01       	movw	r26, r24
 164:	8c 19       	sub	r24, r12
 166:	9d 09       	sbc	r25, r13
 168:	ae 09       	sbc	r26, r14
 16a:	bf 09       	sbc	r27, r15
 16c:	6c 01       	movw	r12, r24
 16e:	7d 01       	movw	r14, r26
 170:	8a 30       	cpi	r24, 0x0A	; 10
 172:	91 05       	cpc	r25, r1
 174:	a1 05       	cpc	r26, r1
 176:	b1 05       	cpc	r27, r1
 178:	0c f4       	brge	.+2      	; 0x17c <writeint+0x74>
 17a:	5e c0       	rjmp	.+188    	; 0x238 <writeint+0x130>
 17c:	9c 01       	movw	r18, r24
 17e:	ad 01       	movw	r20, r26
 180:	c1 e0       	ldi	r28, 0x01	; 1
 182:	d0 e0       	ldi	r29, 0x00	; 0
 184:	0f 2e       	mov	r0, r31
 186:	fa e0       	ldi	r31, 0x0A	; 10
 188:	4f 2e       	mov	r4, r31
 18a:	51 2c       	mov	r5, r1
 18c:	61 2c       	mov	r6, r1
 18e:	71 2c       	mov	r7, r1
 190:	f0 2d       	mov	r31, r0
 192:	ca 01       	movw	r24, r20
 194:	b9 01       	movw	r22, r18
 196:	a3 01       	movw	r20, r6
 198:	92 01       	movw	r18, r4
 19a:	0e 94 0b 04 	call	0x816	; 0x816 <__divmodsi4>
 19e:	ce 01       	movw	r24, r28
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	4e 01       	movw	r8, r28
 1a6:	88 0c       	add	r8, r8
 1a8:	99 1c       	adc	r9, r9
 1aa:	88 0c       	add	r8, r8
 1ac:	99 1c       	adc	r9, r9
 1ae:	88 0c       	add	r8, r8
 1b0:	99 1c       	adc	r9, r9
 1b2:	ec 01       	movw	r28, r24
 1b4:	c8 0d       	add	r28, r8
 1b6:	d9 1d       	adc	r29, r9
 1b8:	2a 30       	cpi	r18, 0x0A	; 10
 1ba:	31 05       	cpc	r19, r1
 1bc:	41 05       	cpc	r20, r1
 1be:	51 05       	cpc	r21, r1
 1c0:	44 f7       	brge	.-48     	; 0x192 <writeint+0x8a>
 1c2:	4e 01       	movw	r8, r28
 1c4:	dd 0f       	add	r29, r29
 1c6:	aa 08       	sbc	r10, r10
 1c8:	bb 08       	sbc	r11, r11
 1ca:	18 14       	cp	r1, r8
 1cc:	19 04       	cpc	r1, r9
 1ce:	1a 04       	cpc	r1, r10
 1d0:	1b 04       	cpc	r1, r11
 1d2:	ac f5       	brge	.+106    	; 0x23e <writeint+0x136>
 1d4:	41 2c       	mov	r4, r1
 1d6:	51 2c       	mov	r5, r1
 1d8:	32 01       	movw	r6, r4
 1da:	43 94       	inc	r4
 1dc:	c5 01       	movw	r24, r10
 1de:	b4 01       	movw	r22, r8
 1e0:	a3 01       	movw	r20, r6
 1e2:	92 01       	movw	r18, r4
 1e4:	0e 94 0b 04 	call	0x816	; 0x816 <__divmodsi4>
 1e8:	c7 01       	movw	r24, r14
 1ea:	b6 01       	movw	r22, r12
 1ec:	0e 94 0b 04 	call	0x816	; 0x816 <__divmodsi4>
 1f0:	06 2f       	mov	r16, r22
 1f2:	17 2f       	mov	r17, r23
 1f4:	d8 2f       	mov	r29, r24
 1f6:	c9 2f       	mov	r28, r25
 1f8:	80 e3       	ldi	r24, 0x30	; 48
 1fa:	82 0f       	add	r24, r18
 1fc:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 200:	c0 2e       	mov	r12, r16
 202:	d1 2e       	mov	r13, r17
 204:	ed 2e       	mov	r14, r29
 206:	fc 2e       	mov	r15, r28
 208:	44 0c       	add	r4, r4
 20a:	55 1c       	adc	r5, r5
 20c:	66 1c       	adc	r6, r6
 20e:	77 1c       	adc	r7, r7
 210:	d3 01       	movw	r26, r6
 212:	c2 01       	movw	r24, r4
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	aa 1f       	adc	r26, r26
 21a:	bb 1f       	adc	r27, r27
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	aa 1f       	adc	r26, r26
 222:	bb 1f       	adc	r27, r27
 224:	48 0e       	add	r4, r24
 226:	59 1e       	adc	r5, r25
 228:	6a 1e       	adc	r6, r26
 22a:	7b 1e       	adc	r7, r27
 22c:	84 14       	cp	r8, r4
 22e:	95 04       	cpc	r9, r5
 230:	a6 04       	cpc	r10, r6
 232:	b7 04       	cpc	r11, r7
 234:	9c f6       	brge	.-90     	; 0x1dc <writeint+0xd4>
 236:	03 c0       	rjmp	.+6      	; 0x23e <writeint+0x136>
 238:	80 5d       	subi	r24, 0xD0	; 208
 23a:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	ff 90       	pop	r15
 248:	ef 90       	pop	r14
 24a:	df 90       	pop	r13
 24c:	cf 90       	pop	r12
 24e:	bf 90       	pop	r11
 250:	af 90       	pop	r10
 252:	9f 90       	pop	r9
 254:	8f 90       	pop	r8
 256:	7f 90       	pop	r7
 258:	6f 90       	pop	r6
 25a:	5f 90       	pop	r5
 25c:	4f 90       	pop	r4
 25e:	08 95       	ret

00000260 <I2C_start>:
 260:	84 ea       	ldi	r24, 0xA4	; 164
 262:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 266:	ec eb       	ldi	r30, 0xBC	; 188
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	88 23       	and	r24, r24
 26e:	ec f7       	brge	.-6      	; 0x26a <I2C_start+0xa>
 270:	08 95       	ret

00000272 <I2C_send_byte>:
 272:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 276:	84 e8       	ldi	r24, 0x84	; 132
 278:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 27c:	ec eb       	ldi	r30, 0xBC	; 188
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	88 23       	and	r24, r24
 284:	ec f7       	brge	.-6      	; 0x280 <I2C_send_byte+0xe>
 286:	08 95       	ret

00000288 <I2C_read_byte>:
 288:	84 ec       	ldi	r24, 0xC4	; 196
 28a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 28e:	ec eb       	ldi	r30, 0xBC	; 188
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	88 23       	and	r24, r24
 296:	ec f7       	brge	.-6      	; 0x292 <I2C_read_byte+0xa>
 298:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 29c:	08 95       	ret

0000029e <I2C_read_byte_no_ack>:
 29e:	84 e8       	ldi	r24, 0x84	; 132
 2a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2a4:	ec eb       	ldi	r30, 0xBC	; 188
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	88 23       	and	r24, r24
 2ac:	ec f7       	brge	.-6      	; 0x2a8 <I2C_read_byte_no_ack+0xa>
 2ae:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 2b2:	08 95       	ret

000002b4 <mpu_init>:
 2b4:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 2b8:	80 ed       	ldi	r24, 0xD0	; 208
 2ba:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2be:	8b e6       	ldi	r24, 0x6B	; 107
 2c0:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2ca:	84 e9       	ldi	r24, 0x94	; 148
 2cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2d0:	08 95       	ret

000002d2 <mpu_check>:
 2d2:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 2d6:	80 ed       	ldi	r24, 0xD0	; 208
 2d8:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2dc:	85 e7       	ldi	r24, 0x75	; 117
 2de:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2e2:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 2e6:	81 ed       	ldi	r24, 0xD1	; 209
 2e8:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 2ec:	0e 94 4f 01 	call	0x29e	; 0x29e <I2C_read_byte_no_ack>
 2f0:	94 e9       	ldi	r25, 0x94	; 148
 2f2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	88 36       	cpi	r24, 0x68	; 104
 2fa:	09 f0       	breq	.+2      	; 0x2fe <mpu_check+0x2c>
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	89 2f       	mov	r24, r25
 300:	08 95       	ret

00000302 <mpu_read_t>:
 302:	cf 93       	push	r28
 304:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 308:	80 ed       	ldi	r24, 0xD0	; 208
 30a:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 30e:	81 e4       	ldi	r24, 0x41	; 65
 310:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 314:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 318:	81 ed       	ldi	r24, 0xD1	; 209
 31a:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 31e:	0e 94 44 01 	call	0x288	; 0x288 <I2C_read_byte>
 322:	c8 2f       	mov	r28, r24
 324:	0e 94 4f 01 	call	0x29e	; 0x29e <I2C_read_byte_no_ack>
 328:	94 e9       	ldi	r25, 0x94	; 148
 32a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 32e:	2c 2f       	mov	r18, r28
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	32 2f       	mov	r19, r18
 334:	22 27       	eor	r18, r18
 336:	a9 01       	movw	r20, r18
 338:	48 2b       	or	r20, r24
 33a:	ca 01       	movw	r24, r20
 33c:	64 e5       	ldi	r22, 0x54	; 84
 33e:	71 e0       	ldi	r23, 0x01	; 1
 340:	0e 94 f7 03 	call	0x7ee	; 0x7ee <__divmodhi4>
 344:	07 2e       	mov	r0, r23
 346:	00 0c       	add	r0, r0
 348:	88 0b       	sbc	r24, r24
 34a:	99 0b       	sbc	r25, r25
 34c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__floatsisf>
 350:	28 eb       	ldi	r18, 0xB8	; 184
 352:	3e e1       	ldi	r19, 0x1E	; 30
 354:	42 e1       	ldi	r20, 0x12	; 18
 356:	52 e4       	ldi	r21, 0x42	; 66
 358:	0e 94 c7 02 	call	0x58e	; 0x58e <__addsf3>
 35c:	0e 94 33 03 	call	0x666	; 0x666 <__fixsfsi>
 360:	cb 01       	movw	r24, r22
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <mpu_read_ay>:
 366:	cf 93       	push	r28
 368:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 36c:	80 ed       	ldi	r24, 0xD0	; 208
 36e:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 372:	8d e3       	ldi	r24, 0x3D	; 61
 374:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 378:	0e 94 30 01 	call	0x260	; 0x260 <I2C_start>
 37c:	81 ed       	ldi	r24, 0xD1	; 209
 37e:	0e 94 39 01 	call	0x272	; 0x272 <I2C_send_byte>
 382:	0e 94 44 01 	call	0x288	; 0x288 <I2C_read_byte>
 386:	c8 2f       	mov	r28, r24
 388:	0e 94 4f 01 	call	0x29e	; 0x29e <I2C_read_byte_no_ack>
 38c:	94 e9       	ldi	r25, 0x94	; 148
 38e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 392:	2c 2f       	mov	r18, r28
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	32 2f       	mov	r19, r18
 398:	22 27       	eor	r18, r18
 39a:	a9 01       	movw	r20, r18
 39c:	48 2b       	or	r20, r24
 39e:	ca 01       	movw	r24, r20
 3a0:	cf 91       	pop	r28
 3a2:	08 95       	ret

000003a4 <adc_init>:
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <adc0isInit>
 3aa:	ea e7       	ldi	r30, 0x7A	; 122
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	80 81       	ld	r24, Z
 3b0:	87 68       	ori	r24, 0x87	; 135
 3b2:	80 83       	st	Z, r24
 3b4:	ec e7       	ldi	r30, 0x7C	; 124
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	80 6c       	ori	r24, 0xC0	; 192
 3bc:	80 83       	st	Z, r24
 3be:	80 81       	ld	r24, Z
 3c0:	80 7f       	andi	r24, 0xF0	; 240
 3c2:	80 83       	st	Z, r24
 3c4:	ea e7       	ldi	r30, 0x7A	; 122
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	86 fd       	sbrc	r24, 6
 3cc:	fd cf       	rjmp	.-6      	; 0x3c8 <adc_init+0x24>
 3ce:	08 95       	ret

000003d0 <adcRead>:
 3d0:	ea e7       	ldi	r30, 0x7A	; 122
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	80 64       	ori	r24, 0x40	; 64
 3d8:	80 83       	st	Z, r24
 3da:	80 81       	ld	r24, Z
 3dc:	86 fd       	sbrc	r24, 6
 3de:	fd cf       	rjmp	.-6      	; 0x3da <adcRead+0xa>
 3e0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 3e4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 3e8:	08 95       	ret

000003ea <timerOFF>:
 3ea:	ee e6       	ldi	r30, 0x6E	; 110
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	80 81       	ld	r24, Z
 3f0:	8d 7f       	andi	r24, 0xFD	; 253
 3f2:	80 83       	st	Z, r24
 3f4:	08 95       	ret

000003f6 <__vector_14>:
 3f6:	1f 92       	push	r1
 3f8:	0f 92       	push	r0
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	0f 92       	push	r0
 3fe:	11 24       	eor	r1, r1
 400:	2f 93       	push	r18
 402:	3f 93       	push	r19
 404:	4f 93       	push	r20
 406:	5f 93       	push	r21
 408:	6f 93       	push	r22
 40a:	7f 93       	push	r23
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	af 93       	push	r26
 412:	bf 93       	push	r27
 414:	ef 93       	push	r30
 416:	ff 93       	push	r31
 418:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <adcRead>
 41c:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 420:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__data_end>
 424:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__data_end+0x1>
 428:	01 96       	adiw	r24, 0x01	; 1
 42a:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <__data_end+0x1>
 42e:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <__data_end>
 432:	91 70       	andi	r25, 0x01	; 1
 434:	89 2b       	or	r24, r25
 436:	c9 f4       	brne	.+50     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
 440:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <__data_end>
 444:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <__data_end+0x1>
 448:	77 23       	and	r23, r23
 44a:	14 f4       	brge	.+4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44c:	61 50       	subi	r22, 0x01	; 1
 44e:	7e 4f       	sbci	r23, 0xFE	; 254
 450:	67 2f       	mov	r22, r23
 452:	77 0f       	add	r23, r23
 454:	77 0b       	sbc	r23, r23
 456:	65 95       	asr	r22
 458:	07 2e       	mov	r0, r23
 45a:	00 0c       	add	r0, r0
 45c:	88 0b       	sbc	r24, r24
 45e:	99 0b       	sbc	r25, r25
 460:	0e 94 84 00 	call	0x108	; 0x108 <writeint>
 464:	8a e0       	ldi	r24, 0x0A	; 10
 466:	0e 94 66 00 	call	0xcc	; 0xcc <send_byte>
 46a:	20 91 4f 01 	lds	r18, 0x014F	; 0x80014f <kolvo>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	92 2f       	mov	r25, r18
 474:	99 0f       	add	r25, r25
 476:	20 91 4c 01 	lds	r18, 0x014C	; 0x80014c <__data_end>
 47a:	30 91 4d 01 	lds	r19, 0x014D	; 0x80014d <__data_end+0x1>
 47e:	28 17       	cp	r18, r24
 480:	39 07       	cpc	r19, r25
 482:	24 f0       	brlt	.+8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 484:	0e 94 f5 01 	call	0x3ea	; 0x3ea <timerOFF>
 488:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <adc_init>
 48c:	ff 91       	pop	r31
 48e:	ef 91       	pop	r30
 490:	bf 91       	pop	r27
 492:	af 91       	pop	r26
 494:	9f 91       	pop	r25
 496:	8f 91       	pop	r24
 498:	7f 91       	pop	r23
 49a:	6f 91       	pop	r22
 49c:	5f 91       	pop	r21
 49e:	4f 91       	pop	r20
 4a0:	3f 91       	pop	r19
 4a2:	2f 91       	pop	r18
 4a4:	0f 90       	pop	r0
 4a6:	0f be       	out	0x3f, r0	; 63
 4a8:	0f 90       	pop	r0
 4aa:	1f 90       	pop	r1
 4ac:	18 95       	reti

000004ae <__vector_18>:
 4ae:	1f 92       	push	r1
 4b0:	0f 92       	push	r0
 4b2:	0f b6       	in	r0, 0x3f	; 63
 4b4:	0f 92       	push	r0
 4b6:	11 24       	eor	r1, r1
 4b8:	2f 93       	push	r18
 4ba:	8f 93       	push	r24
 4bc:	9f 93       	push	r25
 4be:	ef 93       	push	r30
 4c0:	ff 93       	push	r31
 4c2:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 4c6:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <ind>
 4ca:	e8 2f       	mov	r30, r24
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	ee 5a       	subi	r30, 0xAE	; 174
 4d0:	fe 4f       	sbci	r31, 0xFE	; 254
 4d2:	20 81       	ld	r18, Z
 4d4:	92 0f       	add	r25, r18
 4d6:	90 83       	st	Z, r25
 4d8:	8f 5f       	subi	r24, 0xFF	; 255
 4da:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <ind>
 4de:	ff 91       	pop	r31
 4e0:	ef 91       	pop	r30
 4e2:	9f 91       	pop	r25
 4e4:	8f 91       	pop	r24
 4e6:	2f 91       	pop	r18
 4e8:	0f 90       	pop	r0
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	0f 90       	pop	r0
 4ee:	1f 90       	pop	r1
 4f0:	18 95       	reti

000004f2 <main>:
	adc3_init();
	timerinit();
}
int main(void)
{
	adc_init();
 4f2:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <adc_init>
	uartInit();
 4f6:	0e 94 53 00 	call	0xa6	; 0xa6 <uartInit>
#ifndef I2C_H_
#define I2C_H_

void I2C_init()
{
	TWBR = 0x20; // 10kHz
 4fa:	80 e2       	ldi	r24, 0x20	; 32
 4fc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	I2C_init();
	mpu_init();	
 500:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <mpu_init>
	print("HELLO FROM ATMEGA328\n");
 504:	89 e0       	ldi	r24, 0x09	; 9
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
	if(mpu_check())
 50c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <mpu_check>
 510:	88 23       	and	r24, r24
 512:	29 f0       	breq	.+10     	; 0x51e <main+0x2c>
		print("MPU OK\n");
 514:	8f e1       	ldi	r24, 0x1F	; 31
 516:	91 e0       	ldi	r25, 0x01	; 1
 518:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
 51c:	04 c0       	rjmp	.+8      	; 0x526 <main+0x34>
	else
		print("ERROR MPU!");
 51e:	87 e2       	ldi	r24, 0x27	; 39
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
	sei();
 526:	78 94       	sei
	while(1)
    {
		if(adc0isInit)
 528:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <adc0isInit>
 52c:	88 23       	and	r24, r24
 52e:	61 f0       	breq	.+24     	; 0x548 <main+0x56>
		{
			print("\nPHOTOREZISTOR:");
 530:	82 e3       	ldi	r24, 0x32	; 50
 532:	91 e0       	ldi	r25, 0x01	; 1
 534:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
			writeint(adcRead());
 538:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <adcRead>
 53c:	bc 01       	movw	r22, r24
 53e:	99 0f       	add	r25, r25
 540:	88 0b       	sbc	r24, r24
 542:	99 0b       	sbc	r25, r25
 544:	0e 94 84 00 	call	0x108	; 0x108 <writeint>
		}
		print("\nT=");
 548:	82 e4       	ldi	r24, 0x42	; 66
 54a:	91 e0       	ldi	r25, 0x01	; 1
 54c:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
		writeint(mpu_read_t());
 550:	0e 94 81 01 	call	0x302	; 0x302 <mpu_read_t>
 554:	bc 01       	movw	r22, r24
 556:	99 0f       	add	r25, r25
 558:	88 0b       	sbc	r24, r24
 55a:	99 0b       	sbc	r25, r25
 55c:	0e 94 84 00 	call	0x108	; 0x108 <writeint>
		print("\n y=");
 560:	86 e4       	ldi	r24, 0x46	; 70
 562:	91 e0       	ldi	r25, 0x01	; 1
 564:	0e 94 6e 00 	call	0xdc	; 0xdc <print>
		writeint(mpu_read_ay());
 568:	0e 94 b3 01 	call	0x366	; 0x366 <mpu_read_ay>
 56c:	bc 01       	movw	r22, r24
 56e:	99 0f       	add	r25, r25
 570:	88 0b       	sbc	r24, r24
 572:	99 0b       	sbc	r25, r25
 574:	0e 94 84 00 	call	0x108	; 0x108 <writeint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 578:	2f ef       	ldi	r18, 0xFF	; 255
 57a:	89 e6       	ldi	r24, 0x69	; 105
 57c:	98 e1       	ldi	r25, 0x18	; 24
 57e:	21 50       	subi	r18, 0x01	; 1
 580:	80 40       	sbci	r24, 0x00	; 0
 582:	90 40       	sbci	r25, 0x00	; 0
 584:	e1 f7       	brne	.-8      	; 0x57e <main+0x8c>
 586:	00 c0       	rjmp	.+0      	; 0x588 <main+0x96>
 588:	00 00       	nop
 58a:	ce cf       	rjmp	.-100    	; 0x528 <main+0x36>

0000058c <__subsf3>:
 58c:	50 58       	subi	r21, 0x80	; 128

0000058e <__addsf3>:
 58e:	bb 27       	eor	r27, r27
 590:	aa 27       	eor	r26, r26
 592:	0e 94 de 02 	call	0x5bc	; 0x5bc <__addsf3x>
 596:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_round>
 59a:	0e 94 af 03 	call	0x75e	; 0x75e <__fp_pscA>
 59e:	38 f0       	brcs	.+14     	; 0x5ae <__addsf3+0x20>
 5a0:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_pscB>
 5a4:	20 f0       	brcs	.+8      	; 0x5ae <__addsf3+0x20>
 5a6:	39 f4       	brne	.+14     	; 0x5b6 <__addsf3+0x28>
 5a8:	9f 3f       	cpi	r25, 0xFF	; 255
 5aa:	19 f4       	brne	.+6      	; 0x5b2 <__addsf3+0x24>
 5ac:	26 f4       	brtc	.+8      	; 0x5b6 <__addsf3+0x28>
 5ae:	0c 94 ac 03 	jmp	0x758	; 0x758 <__fp_nan>
 5b2:	0e f4       	brtc	.+2      	; 0x5b6 <__addsf3+0x28>
 5b4:	e0 95       	com	r30
 5b6:	e7 fb       	bst	r30, 7
 5b8:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_inf>

000005bc <__addsf3x>:
 5bc:	e9 2f       	mov	r30, r25
 5be:	0e 94 ce 03 	call	0x79c	; 0x79c <__fp_split3>
 5c2:	58 f3       	brcs	.-42     	; 0x59a <__addsf3+0xc>
 5c4:	ba 17       	cp	r27, r26
 5c6:	62 07       	cpc	r22, r18
 5c8:	73 07       	cpc	r23, r19
 5ca:	84 07       	cpc	r24, r20
 5cc:	95 07       	cpc	r25, r21
 5ce:	20 f0       	brcs	.+8      	; 0x5d8 <__addsf3x+0x1c>
 5d0:	79 f4       	brne	.+30     	; 0x5f0 <__addsf3x+0x34>
 5d2:	a6 f5       	brtc	.+104    	; 0x63c <__addsf3x+0x80>
 5d4:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__fp_zero>
 5d8:	0e f4       	brtc	.+2      	; 0x5dc <__addsf3x+0x20>
 5da:	e0 95       	com	r30
 5dc:	0b 2e       	mov	r0, r27
 5de:	ba 2f       	mov	r27, r26
 5e0:	a0 2d       	mov	r26, r0
 5e2:	0b 01       	movw	r0, r22
 5e4:	b9 01       	movw	r22, r18
 5e6:	90 01       	movw	r18, r0
 5e8:	0c 01       	movw	r0, r24
 5ea:	ca 01       	movw	r24, r20
 5ec:	a0 01       	movw	r20, r0
 5ee:	11 24       	eor	r1, r1
 5f0:	ff 27       	eor	r31, r31
 5f2:	59 1b       	sub	r21, r25
 5f4:	99 f0       	breq	.+38     	; 0x61c <__addsf3x+0x60>
 5f6:	59 3f       	cpi	r21, 0xF9	; 249
 5f8:	50 f4       	brcc	.+20     	; 0x60e <__addsf3x+0x52>
 5fa:	50 3e       	cpi	r21, 0xE0	; 224
 5fc:	68 f1       	brcs	.+90     	; 0x658 <__addsf3x+0x9c>
 5fe:	1a 16       	cp	r1, r26
 600:	f0 40       	sbci	r31, 0x00	; 0
 602:	a2 2f       	mov	r26, r18
 604:	23 2f       	mov	r18, r19
 606:	34 2f       	mov	r19, r20
 608:	44 27       	eor	r20, r20
 60a:	58 5f       	subi	r21, 0xF8	; 248
 60c:	f3 cf       	rjmp	.-26     	; 0x5f4 <__addsf3x+0x38>
 60e:	46 95       	lsr	r20
 610:	37 95       	ror	r19
 612:	27 95       	ror	r18
 614:	a7 95       	ror	r26
 616:	f0 40       	sbci	r31, 0x00	; 0
 618:	53 95       	inc	r21
 61a:	c9 f7       	brne	.-14     	; 0x60e <__addsf3x+0x52>
 61c:	7e f4       	brtc	.+30     	; 0x63c <__addsf3x+0x80>
 61e:	1f 16       	cp	r1, r31
 620:	ba 0b       	sbc	r27, r26
 622:	62 0b       	sbc	r22, r18
 624:	73 0b       	sbc	r23, r19
 626:	84 0b       	sbc	r24, r20
 628:	ba f0       	brmi	.+46     	; 0x658 <__addsf3x+0x9c>
 62a:	91 50       	subi	r25, 0x01	; 1
 62c:	a1 f0       	breq	.+40     	; 0x656 <__addsf3x+0x9a>
 62e:	ff 0f       	add	r31, r31
 630:	bb 1f       	adc	r27, r27
 632:	66 1f       	adc	r22, r22
 634:	77 1f       	adc	r23, r23
 636:	88 1f       	adc	r24, r24
 638:	c2 f7       	brpl	.-16     	; 0x62a <__addsf3x+0x6e>
 63a:	0e c0       	rjmp	.+28     	; 0x658 <__addsf3x+0x9c>
 63c:	ba 0f       	add	r27, r26
 63e:	62 1f       	adc	r22, r18
 640:	73 1f       	adc	r23, r19
 642:	84 1f       	adc	r24, r20
 644:	48 f4       	brcc	.+18     	; 0x658 <__addsf3x+0x9c>
 646:	87 95       	ror	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	f7 95       	ror	r31
 650:	9e 3f       	cpi	r25, 0xFE	; 254
 652:	08 f0       	brcs	.+2      	; 0x656 <__addsf3x+0x9a>
 654:	b0 cf       	rjmp	.-160    	; 0x5b6 <__addsf3+0x28>
 656:	93 95       	inc	r25
 658:	88 0f       	add	r24, r24
 65a:	08 f0       	brcs	.+2      	; 0x65e <__addsf3x+0xa2>
 65c:	99 27       	eor	r25, r25
 65e:	ee 0f       	add	r30, r30
 660:	97 95       	ror	r25
 662:	87 95       	ror	r24
 664:	08 95       	ret

00000666 <__fixsfsi>:
 666:	0e 94 3a 03 	call	0x674	; 0x674 <__fixunssfsi>
 66a:	68 94       	set
 66c:	b1 11       	cpse	r27, r1
 66e:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__fp_szero>
 672:	08 95       	ret

00000674 <__fixunssfsi>:
 674:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fp_splitA>
 678:	88 f0       	brcs	.+34     	; 0x69c <__fixunssfsi+0x28>
 67a:	9f 57       	subi	r25, 0x7F	; 127
 67c:	98 f0       	brcs	.+38     	; 0x6a4 <__fixunssfsi+0x30>
 67e:	b9 2f       	mov	r27, r25
 680:	99 27       	eor	r25, r25
 682:	b7 51       	subi	r27, 0x17	; 23
 684:	b0 f0       	brcs	.+44     	; 0x6b2 <__fixunssfsi+0x3e>
 686:	e1 f0       	breq	.+56     	; 0x6c0 <__fixunssfsi+0x4c>
 688:	66 0f       	add	r22, r22
 68a:	77 1f       	adc	r23, r23
 68c:	88 1f       	adc	r24, r24
 68e:	99 1f       	adc	r25, r25
 690:	1a f0       	brmi	.+6      	; 0x698 <__fixunssfsi+0x24>
 692:	ba 95       	dec	r27
 694:	c9 f7       	brne	.-14     	; 0x688 <__fixunssfsi+0x14>
 696:	14 c0       	rjmp	.+40     	; 0x6c0 <__fixunssfsi+0x4c>
 698:	b1 30       	cpi	r27, 0x01	; 1
 69a:	91 f0       	breq	.+36     	; 0x6c0 <__fixunssfsi+0x4c>
 69c:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fp_zero>
 6a0:	b1 e0       	ldi	r27, 0x01	; 1
 6a2:	08 95       	ret
 6a4:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__fp_zero>
 6a8:	67 2f       	mov	r22, r23
 6aa:	78 2f       	mov	r23, r24
 6ac:	88 27       	eor	r24, r24
 6ae:	b8 5f       	subi	r27, 0xF8	; 248
 6b0:	39 f0       	breq	.+14     	; 0x6c0 <__fixunssfsi+0x4c>
 6b2:	b9 3f       	cpi	r27, 0xF9	; 249
 6b4:	cc f3       	brlt	.-14     	; 0x6a8 <__fixunssfsi+0x34>
 6b6:	86 95       	lsr	r24
 6b8:	77 95       	ror	r23
 6ba:	67 95       	ror	r22
 6bc:	b3 95       	inc	r27
 6be:	d9 f7       	brne	.-10     	; 0x6b6 <__fixunssfsi+0x42>
 6c0:	3e f4       	brtc	.+14     	; 0x6d0 <__fixunssfsi+0x5c>
 6c2:	90 95       	com	r25
 6c4:	80 95       	com	r24
 6c6:	70 95       	com	r23
 6c8:	61 95       	neg	r22
 6ca:	7f 4f       	sbci	r23, 0xFF	; 255
 6cc:	8f 4f       	sbci	r24, 0xFF	; 255
 6ce:	9f 4f       	sbci	r25, 0xFF	; 255
 6d0:	08 95       	ret

000006d2 <__floatunsisf>:
 6d2:	e8 94       	clt
 6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <__floatsisf+0x12>

000006d6 <__floatsisf>:
 6d6:	97 fb       	bst	r25, 7
 6d8:	3e f4       	brtc	.+14     	; 0x6e8 <__floatsisf+0x12>
 6da:	90 95       	com	r25
 6dc:	80 95       	com	r24
 6de:	70 95       	com	r23
 6e0:	61 95       	neg	r22
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	99 23       	and	r25, r25
 6ea:	a9 f0       	breq	.+42     	; 0x716 <__floatsisf+0x40>
 6ec:	f9 2f       	mov	r31, r25
 6ee:	96 e9       	ldi	r25, 0x96	; 150
 6f0:	bb 27       	eor	r27, r27
 6f2:	93 95       	inc	r25
 6f4:	f6 95       	lsr	r31
 6f6:	87 95       	ror	r24
 6f8:	77 95       	ror	r23
 6fa:	67 95       	ror	r22
 6fc:	b7 95       	ror	r27
 6fe:	f1 11       	cpse	r31, r1
 700:	f8 cf       	rjmp	.-16     	; 0x6f2 <__floatsisf+0x1c>
 702:	fa f4       	brpl	.+62     	; 0x742 <__floatsisf+0x6c>
 704:	bb 0f       	add	r27, r27
 706:	11 f4       	brne	.+4      	; 0x70c <__floatsisf+0x36>
 708:	60 ff       	sbrs	r22, 0
 70a:	1b c0       	rjmp	.+54     	; 0x742 <__floatsisf+0x6c>
 70c:	6f 5f       	subi	r22, 0xFF	; 255
 70e:	7f 4f       	sbci	r23, 0xFF	; 255
 710:	8f 4f       	sbci	r24, 0xFF	; 255
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	16 c0       	rjmp	.+44     	; 0x742 <__floatsisf+0x6c>
 716:	88 23       	and	r24, r24
 718:	11 f0       	breq	.+4      	; 0x71e <__floatsisf+0x48>
 71a:	96 e9       	ldi	r25, 0x96	; 150
 71c:	11 c0       	rjmp	.+34     	; 0x740 <__floatsisf+0x6a>
 71e:	77 23       	and	r23, r23
 720:	21 f0       	breq	.+8      	; 0x72a <__floatsisf+0x54>
 722:	9e e8       	ldi	r25, 0x8E	; 142
 724:	87 2f       	mov	r24, r23
 726:	76 2f       	mov	r23, r22
 728:	05 c0       	rjmp	.+10     	; 0x734 <__floatsisf+0x5e>
 72a:	66 23       	and	r22, r22
 72c:	71 f0       	breq	.+28     	; 0x74a <__floatsisf+0x74>
 72e:	96 e8       	ldi	r25, 0x86	; 134
 730:	86 2f       	mov	r24, r22
 732:	70 e0       	ldi	r23, 0x00	; 0
 734:	60 e0       	ldi	r22, 0x00	; 0
 736:	2a f0       	brmi	.+10     	; 0x742 <__floatsisf+0x6c>
 738:	9a 95       	dec	r25
 73a:	66 0f       	add	r22, r22
 73c:	77 1f       	adc	r23, r23
 73e:	88 1f       	adc	r24, r24
 740:	da f7       	brpl	.-10     	; 0x738 <__floatsisf+0x62>
 742:	88 0f       	add	r24, r24
 744:	96 95       	lsr	r25
 746:	87 95       	ror	r24
 748:	97 f9       	bld	r25, 7
 74a:	08 95       	ret

0000074c <__fp_inf>:
 74c:	97 f9       	bld	r25, 7
 74e:	9f 67       	ori	r25, 0x7F	; 127
 750:	80 e8       	ldi	r24, 0x80	; 128
 752:	70 e0       	ldi	r23, 0x00	; 0
 754:	60 e0       	ldi	r22, 0x00	; 0
 756:	08 95       	ret

00000758 <__fp_nan>:
 758:	9f ef       	ldi	r25, 0xFF	; 255
 75a:	80 ec       	ldi	r24, 0xC0	; 192
 75c:	08 95       	ret

0000075e <__fp_pscA>:
 75e:	00 24       	eor	r0, r0
 760:	0a 94       	dec	r0
 762:	16 16       	cp	r1, r22
 764:	17 06       	cpc	r1, r23
 766:	18 06       	cpc	r1, r24
 768:	09 06       	cpc	r0, r25
 76a:	08 95       	ret

0000076c <__fp_pscB>:
 76c:	00 24       	eor	r0, r0
 76e:	0a 94       	dec	r0
 770:	12 16       	cp	r1, r18
 772:	13 06       	cpc	r1, r19
 774:	14 06       	cpc	r1, r20
 776:	05 06       	cpc	r0, r21
 778:	08 95       	ret

0000077a <__fp_round>:
 77a:	09 2e       	mov	r0, r25
 77c:	03 94       	inc	r0
 77e:	00 0c       	add	r0, r0
 780:	11 f4       	brne	.+4      	; 0x786 <__fp_round+0xc>
 782:	88 23       	and	r24, r24
 784:	52 f0       	brmi	.+20     	; 0x79a <__fp_round+0x20>
 786:	bb 0f       	add	r27, r27
 788:	40 f4       	brcc	.+16     	; 0x79a <__fp_round+0x20>
 78a:	bf 2b       	or	r27, r31
 78c:	11 f4       	brne	.+4      	; 0x792 <__fp_round+0x18>
 78e:	60 ff       	sbrs	r22, 0
 790:	04 c0       	rjmp	.+8      	; 0x79a <__fp_round+0x20>
 792:	6f 5f       	subi	r22, 0xFF	; 255
 794:	7f 4f       	sbci	r23, 0xFF	; 255
 796:	8f 4f       	sbci	r24, 0xFF	; 255
 798:	9f 4f       	sbci	r25, 0xFF	; 255
 79a:	08 95       	ret

0000079c <__fp_split3>:
 79c:	57 fd       	sbrc	r21, 7
 79e:	90 58       	subi	r25, 0x80	; 128
 7a0:	44 0f       	add	r20, r20
 7a2:	55 1f       	adc	r21, r21
 7a4:	59 f0       	breq	.+22     	; 0x7bc <__fp_splitA+0x10>
 7a6:	5f 3f       	cpi	r21, 0xFF	; 255
 7a8:	71 f0       	breq	.+28     	; 0x7c6 <__fp_splitA+0x1a>
 7aa:	47 95       	ror	r20

000007ac <__fp_splitA>:
 7ac:	88 0f       	add	r24, r24
 7ae:	97 fb       	bst	r25, 7
 7b0:	99 1f       	adc	r25, r25
 7b2:	61 f0       	breq	.+24     	; 0x7cc <__fp_splitA+0x20>
 7b4:	9f 3f       	cpi	r25, 0xFF	; 255
 7b6:	79 f0       	breq	.+30     	; 0x7d6 <__fp_splitA+0x2a>
 7b8:	87 95       	ror	r24
 7ba:	08 95       	ret
 7bc:	12 16       	cp	r1, r18
 7be:	13 06       	cpc	r1, r19
 7c0:	14 06       	cpc	r1, r20
 7c2:	55 1f       	adc	r21, r21
 7c4:	f2 cf       	rjmp	.-28     	; 0x7aa <__fp_split3+0xe>
 7c6:	46 95       	lsr	r20
 7c8:	f1 df       	rcall	.-30     	; 0x7ac <__fp_splitA>
 7ca:	08 c0       	rjmp	.+16     	; 0x7dc <__fp_splitA+0x30>
 7cc:	16 16       	cp	r1, r22
 7ce:	17 06       	cpc	r1, r23
 7d0:	18 06       	cpc	r1, r24
 7d2:	99 1f       	adc	r25, r25
 7d4:	f1 cf       	rjmp	.-30     	; 0x7b8 <__fp_splitA+0xc>
 7d6:	86 95       	lsr	r24
 7d8:	71 05       	cpc	r23, r1
 7da:	61 05       	cpc	r22, r1
 7dc:	08 94       	sec
 7de:	08 95       	ret

000007e0 <__fp_zero>:
 7e0:	e8 94       	clt

000007e2 <__fp_szero>:
 7e2:	bb 27       	eor	r27, r27
 7e4:	66 27       	eor	r22, r22
 7e6:	77 27       	eor	r23, r23
 7e8:	cb 01       	movw	r24, r22
 7ea:	97 f9       	bld	r25, 7
 7ec:	08 95       	ret

000007ee <__divmodhi4>:
 7ee:	97 fb       	bst	r25, 7
 7f0:	07 2e       	mov	r0, r23
 7f2:	16 f4       	brtc	.+4      	; 0x7f8 <__divmodhi4+0xa>
 7f4:	00 94       	com	r0
 7f6:	07 d0       	rcall	.+14     	; 0x806 <__divmodhi4_neg1>
 7f8:	77 fd       	sbrc	r23, 7
 7fa:	09 d0       	rcall	.+18     	; 0x80e <__divmodhi4_neg2>
 7fc:	0e 94 2a 04 	call	0x854	; 0x854 <__udivmodhi4>
 800:	07 fc       	sbrc	r0, 7
 802:	05 d0       	rcall	.+10     	; 0x80e <__divmodhi4_neg2>
 804:	3e f4       	brtc	.+14     	; 0x814 <__divmodhi4_exit>

00000806 <__divmodhi4_neg1>:
 806:	90 95       	com	r25
 808:	81 95       	neg	r24
 80a:	9f 4f       	sbci	r25, 0xFF	; 255
 80c:	08 95       	ret

0000080e <__divmodhi4_neg2>:
 80e:	70 95       	com	r23
 810:	61 95       	neg	r22
 812:	7f 4f       	sbci	r23, 0xFF	; 255

00000814 <__divmodhi4_exit>:
 814:	08 95       	ret

00000816 <__divmodsi4>:
 816:	05 2e       	mov	r0, r21
 818:	97 fb       	bst	r25, 7
 81a:	1e f4       	brtc	.+6      	; 0x822 <__divmodsi4+0xc>
 81c:	00 94       	com	r0
 81e:	0e 94 22 04 	call	0x844	; 0x844 <__negsi2>
 822:	57 fd       	sbrc	r21, 7
 824:	07 d0       	rcall	.+14     	; 0x834 <__divmodsi4_neg2>
 826:	0e 94 3e 04 	call	0x87c	; 0x87c <__udivmodsi4>
 82a:	07 fc       	sbrc	r0, 7
 82c:	03 d0       	rcall	.+6      	; 0x834 <__divmodsi4_neg2>
 82e:	4e f4       	brtc	.+18     	; 0x842 <__divmodsi4_exit>
 830:	0c 94 22 04 	jmp	0x844	; 0x844 <__negsi2>

00000834 <__divmodsi4_neg2>:
 834:	50 95       	com	r21
 836:	40 95       	com	r20
 838:	30 95       	com	r19
 83a:	21 95       	neg	r18
 83c:	3f 4f       	sbci	r19, 0xFF	; 255
 83e:	4f 4f       	sbci	r20, 0xFF	; 255
 840:	5f 4f       	sbci	r21, 0xFF	; 255

00000842 <__divmodsi4_exit>:
 842:	08 95       	ret

00000844 <__negsi2>:
 844:	90 95       	com	r25
 846:	80 95       	com	r24
 848:	70 95       	com	r23
 84a:	61 95       	neg	r22
 84c:	7f 4f       	sbci	r23, 0xFF	; 255
 84e:	8f 4f       	sbci	r24, 0xFF	; 255
 850:	9f 4f       	sbci	r25, 0xFF	; 255
 852:	08 95       	ret

00000854 <__udivmodhi4>:
 854:	aa 1b       	sub	r26, r26
 856:	bb 1b       	sub	r27, r27
 858:	51 e1       	ldi	r21, 0x11	; 17
 85a:	07 c0       	rjmp	.+14     	; 0x86a <__udivmodhi4_ep>

0000085c <__udivmodhi4_loop>:
 85c:	aa 1f       	adc	r26, r26
 85e:	bb 1f       	adc	r27, r27
 860:	a6 17       	cp	r26, r22
 862:	b7 07       	cpc	r27, r23
 864:	10 f0       	brcs	.+4      	; 0x86a <__udivmodhi4_ep>
 866:	a6 1b       	sub	r26, r22
 868:	b7 0b       	sbc	r27, r23

0000086a <__udivmodhi4_ep>:
 86a:	88 1f       	adc	r24, r24
 86c:	99 1f       	adc	r25, r25
 86e:	5a 95       	dec	r21
 870:	a9 f7       	brne	.-22     	; 0x85c <__udivmodhi4_loop>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	bc 01       	movw	r22, r24
 878:	cd 01       	movw	r24, r26
 87a:	08 95       	ret

0000087c <__udivmodsi4>:
 87c:	a1 e2       	ldi	r26, 0x21	; 33
 87e:	1a 2e       	mov	r1, r26
 880:	aa 1b       	sub	r26, r26
 882:	bb 1b       	sub	r27, r27
 884:	fd 01       	movw	r30, r26
 886:	0d c0       	rjmp	.+26     	; 0x8a2 <__udivmodsi4_ep>

00000888 <__udivmodsi4_loop>:
 888:	aa 1f       	adc	r26, r26
 88a:	bb 1f       	adc	r27, r27
 88c:	ee 1f       	adc	r30, r30
 88e:	ff 1f       	adc	r31, r31
 890:	a2 17       	cp	r26, r18
 892:	b3 07       	cpc	r27, r19
 894:	e4 07       	cpc	r30, r20
 896:	f5 07       	cpc	r31, r21
 898:	20 f0       	brcs	.+8      	; 0x8a2 <__udivmodsi4_ep>
 89a:	a2 1b       	sub	r26, r18
 89c:	b3 0b       	sbc	r27, r19
 89e:	e4 0b       	sbc	r30, r20
 8a0:	f5 0b       	sbc	r31, r21

000008a2 <__udivmodsi4_ep>:
 8a2:	66 1f       	adc	r22, r22
 8a4:	77 1f       	adc	r23, r23
 8a6:	88 1f       	adc	r24, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	1a 94       	dec	r1
 8ac:	69 f7       	brne	.-38     	; 0x888 <__udivmodsi4_loop>
 8ae:	60 95       	com	r22
 8b0:	70 95       	com	r23
 8b2:	80 95       	com	r24
 8b4:	90 95       	com	r25
 8b6:	9b 01       	movw	r18, r22
 8b8:	ac 01       	movw	r20, r24
 8ba:	bd 01       	movw	r22, r26
 8bc:	cf 01       	movw	r24, r30
 8be:	08 95       	ret

000008c0 <_exit>:
 8c0:	f8 94       	cli

000008c2 <__stop_program>:
 8c2:	ff cf       	rjmp	.-2      	; 0x8c2 <__stop_program>
